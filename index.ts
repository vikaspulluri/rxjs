import { exec } from './logger';
import * as startWith from "./startWith";
import * as combineLatest from './combineLatest';
import * as merge from './merge';
import * as concat from './concat';
import * as forkJoin from './forkJoin';
import * as withLatestFrom from './withLatestFrom';
import * as zip from './zip';
import * as race from './race';
import * as pairwise from './pairwise';
import * as from from './from';
import * as of from './of';
import * as catchError from './catchError';
import * as retry from './retry';
import * as share from './share';
import * as shareReplay from './shareReplay';
import * as debounce from './debounce';
import * as distinctUntilChanged from './distinctUntilChanged';
import * as filter from './filter';
import * as first from './first';
import * as take from './take';
import * as takeUntil from './takeUntil';
import * as throttleTime from './throttleTime';
import * as bufferTime from './bufferTime';
import * as concatMap from './concatMap';
import * as map from './map';
import * as mapTo from './mapTo';
import * as mergeMap from './mergeMap';
import * as exhaustMap from './exhaustMap';
import * as scan from './scan';
import * as switchMap from './switchMap';
import * as subject from './subject';
import * as asyncSubject from './asyncSubject';
import * as behaviorSubject from './behaviorSubject';
import * as replaySubject from './replaySubject';
import * as observable from './observable';
import * as customObservable from './custom-observable';

// exec(startWith);
// exec(combineLatest);
// exec(merge);
// exec(concat);
// exec(forkJoin);
// exec(withLatestFrom);
// exec(zip);
// exec(race);
// exec(pairwise);
// exec(from);
// exec(of);
// exec(catchError);
// exec(retry);
// exec(share);
// exec(shareReplay);
// exec(debounce);
// exec(distinctUntilChanged);
// exec(filter);
// exec(first);
// exec(take);
// exec(takeUntil);
// exec(throttleTime);
// exec(bufferTime);
// exec(concatMap);
// exec(map);
// exec(mapTo);
// exec(mergeMap);
// exec(exhaustMap);
// exec(scan);
// exec(switchMap);
// exec(subject);
// exec(asyncSubject);
// exec(behaviorSubject);
// exec(replaySubject);
// exec(observable);
exec(customObservable);
